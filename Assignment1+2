DROP DATABASE IF EXISTS qlbaithi;
CREATE DATABASE IF NOT EXISTS qlbaithi;
USE qlbaithi;

DROP TABLE IF EXISTS Department;
CREATE TABLE         Department
(
       DepartmentID     TINYINT AUTO_INCREMENT PRIMARY KEY,
       DepartmentName   VARCHAR(30)
);
DROP TABLE IF EXISTS Positionl;
CREATE TABLE         Positionl
(
       PositionID        TINYINT AUTO_INCREMENT PRIMARY KEY,
       PositionName      VARCHAR(30)
);
DROP TABLE IF EXISTS Accountl;
CREATE TABLE         Accountl
(
	   AccountID          TINYINT AUTO_INCREMENT PRIMARY KEY,
       Email              VARCHAR(30),
       Username           VARCHAR(30),
       FullName           VARCHAR(30),
       DepartmentID       TINYINT NOT NULL,
       PositionID         TINYINT NOT NULL,
       CreateDate         DATE,
FOREIGN KEY(DepartmentID) REFERENCES Department(DepartmentID) ON DELETE CASCADE,
FOREIGN KEY(PositionID) REFERENCES Positionl(PositionID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS Groupl;
CREATE TABLE         Groupl
(
       GroupID            TINYINT AUTO_INCREMENT PRIMARY KEY,
       GroupName          VARCHAR(30),
       CreatorID          INT,
       CreateDate         DATE
);
DROP TABLE IF EXISTS GroupAccount;
CREATE TABLE         GroupAccount
(
        GroupID           TINYINT AUTO_INCREMENT ,
        GroupName          TINYINT NOT NULL,
        JoinDate          DATE,
PRIMARY KEY(GroupID,GroupName)
);
DROP TABLE IF EXISTS TypeQuestion;
CREATE TABLE         TypeQuestion
(
        TypeID             TINYINT AUTO_INCREMENT PRIMARY KEY,
        TypeName           ENUM('Essay',' Multiple-Choice')
);
DROP TABLE IF EXISTS CategoryQuestion;
CREATE TABLE         CategoryQuestion
(
         CategoryID          TINYINT AUTO_INCREMENT PRIMARY KEY,
         CategoryName        VARCHAR(30)
);
DROP TABLE IF EXISTS  Question;
CREATE TABLE           Question
(
		 QuestionID            TINYINT AUTO_INCREMENT PRIMARY KEY,
         Content               VARCHAR(30),
        CategoryID             TINYINT NOT NULL,
        TypeID                 TINYINT NOT NULL,
        CreatorID              INT,
        CreateDate             DATE,
FOREIGN KEY(CategoryID ) REFERENCES CategoryQuestion(CategoryID ) ON DELETE CASCADE,
FOREIGN KEY(TypeID) REFERENCES TypeQuestion(TypeID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS  Answer;
CREATE TABLE          Answer
(
         AnswerID               TINYINT AUTO_INCREMENT PRIMARY KEY,
         Content                VARCHAR(30),
         QuestionID             TINYINT NOT NULL,
         isCorrect              ENUM('TRUE','FALSE'),
FOREIGN KEY(QuestionID ) REFERENCES Question(QuestionID ) ON DELETE CASCADE
);
DROP TABLE IF EXISTS  Exam;
CREATE TABLE          Exam
(
         ExamID                 TINYINT AUTO_INCREMENT PRIMARY KEY,
         Codel                  INT,
         Title                  VARCHAR(30),
         CategoryID             TINYINT NOT NULL,
         Duration               TIME,
         CreatorID              TINYINT NOT NULL,
         CreateDate             DATE,
FOREIGN KEY(CategoryID) REFERENCES CategoryQuestion(CategoryID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS  ExamQuestion;
CREATE TABLE          ExamQuestion
(
	     ExamID                INT,
         QuestionID             TINYINT NOT NULL,
FOREIGN KEY(QuestionID) REFERENCES Question(QuestionID  ) ON DELETE CASCADE
);
